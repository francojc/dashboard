services:
  volume-init:
    image: alpine:latest
    command: ["sh", "-c", "mkdir -p /output/static && chown -R 100:101 /output"]
    volumes:
      - dashboard_output:/output
    user: "0:0"  # Run as root to set permissions

  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GOOGLE_CALENDAR_CLIENT_ID=${GOOGLE_CALENDAR_CLIENT_ID:-}
      - GOOGLE_CALENDAR_CLIENT_SECRET=${GOOGLE_CALENDAR_CLIENT_SECRET:-}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-}
      - MAPBOX_API_KEY=${MAPBOX_API_KEY:-}
      - CANVAS_BASE_URL=${CANVAS_BASE_URL:-}
      - CANVAS_API_KEY=${CANVAS_API_KEY:-}
      - WEATHER_LOCATION=${WEATHER_LOCATION:-Winston-Salem,NC,US}
      - WEATHER_UNITS=${WEATHER_UNITS:-imperial}
      - PORT=${PORT:-8080}
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount source for development (can be removed in production)
      - ./src:/home/appuser/app/src:ro
      # token.json is copied in Dockerfile but mounting is better for state
      - ./token.json:/home/appuser/app/token.json
      - dashboard_output:/home/appuser/app/output
    depends_on:
      - volume-init
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "test -f /home/appuser/app/output/index.html"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - dashboard

  web:
    image: nginx:alpine
    labels:
      - "tsdproxy.enable=true"
      - "tsdproxy.name=dashboard-518"
      - "tsdproxy.container_port=80"
    volumes:
      - dashboard_output:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dashboard

volumes:
  dashboard_output:

networks:
  dashboard:
    driver: bridge
